function plotAsSelected() {
  function showTooltip(x, y, contents, css_class) {
    jQuery('<div class="tooltip">' + contents + '</div>')
    .css({
      position: 'absolute',
      display: 'none',
      top: y + 5,
      left: x + 15
    })
    .css(jQuery.support.opacity ? {opacity: 0.8} : {})
    .addClass(css_class == undefined ? 'ui-state-highlight' : '')
    .appendTo("body")
    .show();
  }

  function removeTooltip()  {
    jQuery('.tooltip').remove();
  }

  function setupTooltips(plot) {
    var previousPoint = null;
    plot.getPlaceholder().unbind('plothover').bind('plothover', function (event, pos, item) {
        if (!plot.getOptions().grid.show_tooltips)  {
          return;
        }
        if (item) {
          if (previousPoint != item.datapoint) {
            previousPoint = item.datapoint;
            removeTooltip();
            var val = item.datapoint[1];
            var label = '&nbsp;' + val + '&nbsp;';
            showTooltip(item.pageX, item.pageY, label);
          }
        } else {
          removeTooltip();
          previousPoint = null;            
        }
    });
  }

  function setupNavigationControls(plot) {
    function addButton(css_class, right, top, offset) {
      jQuery('<span class="'+css_class+'" style="cursor: pointer; cursor:hand; position: absolute;right:' + right + 'px;top:' + top + 'px"/>')
      .appendTo(plot.getPlaceholder())
      .click(function (e) {
        e.preventDefault();
        if (offset) {
          plot.pan(offset);
        }
        else  {
          /plus/.test(css_class) ? plot.zoom() : plot.zoomOut();
        }
      });
    }
    if (plot.getOptions().pan.interactive) {
      addButton('arrow-right-icon', 25, 40, {left: 100});
      addButton('arrow-left-icon', 55, 40, {left: -100});
	}
    if (plot.getOptions().zoom.interactive) {
      addButton('plus-icon', 40, 25);
      addButton('minus-icon', 40, 55);
	}
  }

  var isEmpty = function(obj) {
        if(typeof(obj) == 'object') {
            for(var i in obj) {
                return false;
            }
        }
        return true;
  };

  var data = <%= @report.result[:data].to_json %>;
  if (!isEmpty(data)) {
    var SERIES = [];

    for (series in data)  {
      SERIES.push({
        data: data[series],
        label: series
      });
    }
  
    var OPTS = {
      series: {
	    <%= @report.result[:opts][:series] %>
	  },
      xaxis: {
        <%= @report.result[:opts][:x_axis] %>
      },
      yaxis: {
        <%= @report.result[:opts][:y_axis] %>
      },
      grid: {
        <%= @report.result[:opts][:grid] %>
      },
      zoom: {
        <%= @report.result[:opts][:zoom] %>
      },
      pan: {
        <%= @report.result[:opts][:pan] %>
      },
      legend: {
        <%= @report.result[:opts][:legend] %>
      }
    };

    var plot = jQuery.plot(jQuery('#flot-graph'), SERIES, OPTS);
    setupTooltips(plot);
    setupNavigationControls(plot);

    return plot;
  } else {
    jQuery('#flot-graph').html('<%= t("views.dashboard_report.no_data_found")%>');
  }
}

plotAsSelected();
