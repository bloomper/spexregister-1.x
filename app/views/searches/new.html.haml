= render :partial => 'sub_menu'

%h1= t 'views.search.page_title'

- form_tag search_path do
  %p
    %label= t 'activerecord.attributes.spexare.first_name'
    %br>
    = text_field_tag 'search[first_name_contains]', nil, :class => 'fullwidth'
  %p
    %label= t 'activerecord.attributes.spexare.last_name'
    %br>
    = text_field_tag 'search[last_name_contains]', nil, :class => 'fullwidth'
  %p
    %label= t 'activerecord.attributes.spexare.nick_name'
    %br>
    = text_field_tag 'search[nick_name_contains]', nil, :class => 'fullwidth'
  .span-10
    %fieldset
      %legend= t 'activerecord.models.spex'
      %p
        %label= t 'activerecord.attributes.spex.spex_category'
        %br>
        = select_tag 'search[spex_category_id_equals]', options_for_select(get_available_spex_categories.insert(0, ''))
        = observe_field 'search_spex_category_id_equals', :function => "jQuery.fetchSpexByCategory(value, (jQuery('#show_revivals:checked').val() != undefined ? true : false), 'search_spex_id_equals', 'search_spex_title_equals', true)"
      %p
        %label= t 'views.search.show_revivals'
        = check_box_tag 'show_revivals'
        = observe_field 'show_revivals', :function => "jQuery.fetchSpexByCategory(jQuery('#search_spex_category_id_equals').val(), (jQuery('#show_revivals:checked').val() != undefined ? true : false), 'search_spex_id_equals', 'search_spex_title_equals', true)"
      %p
        %label= t 'activerecord.attributes.spex.year'
        %br>
        = select_tag 'search[spex_id_equals]', nil, { :disabled => true, :onchange => "jQuery('#search_spex_title_equals').val(jQuery('#search_spex_id_equals').val());" }
      %p
        %label= t 'activerecord.attributes.spex.title'
        %br>
        = select_tag 'search[spex_title_equals]', nil, { :disabled => true, :onchange => "jQuery('#search_spex_id_equals').val(jQuery('#search_spex_title_equals').val());" }
  .span-10
    %fieldset
      %legend= t 'activerecord.models.function'
      %p
        %label= t 'activerecord.attributes.function.function_category'
        %br>
        = select_tag 'search[function_category_id_equals]', options_for_select(get_available_function_categories.insert(0, ''))
        = observe_field 'search_function_category_id_equals', :function => "jQuery.fetchFunctionsByCategory(value, 'search_function_id_equals', true)"
      %p
        %label= t 'activerecord.attributes.function.name'
        %br>
        = select_tag('search[function_id_equals]', nil, { :disabled => true })
  .span-10
    %fieldset
      %legend= t 'views.search.include'
      %p
        %label= t 'views.search.include_deceased'
        = check_box_tag 'search[deceased_like_any]'
      %p
        %label= t 'views.search.include_no_circulars'
        = check_box_tag 'search[want_circulars_like_any]'
      - if current_user_is_admin?
        %p
          %label= t 'views.search.include_not_published'
          = check_box_tag 'search[publish_approval_like_any]'
  %p.form-buttons
    = button t('views.base.search')
  