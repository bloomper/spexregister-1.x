= render :partial => 'administration/sub_menu'

.toolbar
  %ul.actions
    %li
      = button_link_to_remote t('views.function_category.new_function_category'), { :url => new_resource_url, :method => :get, :update => 'new-function-category' }, :icon => 'add'

%h1= t 'views.function_category.index_title', :action => t('views.base.listing_action')

#new-function-category

- if @function_categories.empty?
  %p= t 'views.function_category.no_function_categories_exist'
- else
  .number-of-hits= page_entries_info @function_categories, { :entry_translation_group_key => 'function_category' }
  %table.index#function-categories
    %tr
      %th= order @search, :by => :name, :as => t('activerecord.attributes.function_category.name')
      %th= order @search, :by => :has_actor, :as => t('activerecord.attributes.function_category.has_actor')
      %th.action-column= t 'views.base.action'
      - @function_categories.each do |function_category|
        %tr{:id => dom_id(function_category), :class => cycle('even', 'odd')}
          %td= h function_category.name
          %td= translate_boolean function_category.has_actor
          %td.actions
            = link_to_view_action function_category
            = link_to_edit_action function_category
            = link_to_delete_action function_category, { :table => 'function-categories' }

= will_paginate(:previous_label => "&#171; #{t('views.base.previous')}", :next_label => "#{t('views.base.next')} &#187;")           

= content_for :sidebar do 
  - form_for @search do |f|
    .box
      %h3= t 'views.base.search'
      %p
        %label= t 'activerecord.attributes.function_category.name'
        %br>
        = f.text_field :name_contains, :size => 15
      %p.form-buttons
        = button t('views.base.search')
