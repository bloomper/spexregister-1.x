%div.fields
  %fieldset
    %legend= t 'activerecord.models.function'
    - unique_function_category_id = "function_category_id_#{form_tag_id(f.object_name, :function_id)}"
    = label_tag unique_function_category_id, t('activerecord.attributes.function.function_category')
    %br>
    = select_tag unique_function_category_id, get_options_for_select_with_actor_attribute
    :javascript
      jQuery.fetchFunctionsByCategory(jQuery('##{unique_function_category_id}').val(), '#{form_tag_id(f.object_name, :function_id)}', false);
      jQuery.toggleDisplayOfActorFields('#{form_tag_id(f.object_name, :actor)}', jQuery('##{unique_function_category_id} :selected').attr('has_actor'), 'actor_fields_template');
    = observe_field unique_function_category_id, :function => "jQuery.fetchFunctionsByCategory(value, '#{form_tag_id(f.object_name, :function_id)}', false); jQuery.toggleDisplayOfActorFields('##{form_tag_id(f.object_name, :actor)}', jQuery('##{unique_function_category_id} :selected').attr('has_actor'), 'actor_fields_template');"
    - f.nested_field_container :function_id do
      = f.label :function_id, t('activerecord.attributes.function.name')
      %br>
      = f.select :function_id, [], { :disabled => true }
    %div{:id => "#{form_tag_id(f.object_name, :actor)}", :class => 'sub-fields', :style => 'display: none'}
    #actor_fields_template{:style => 'display: none'}
      - f.fields_for :actor do |actor_form|
        = render :partial => 'actor_form', :locals => { :f => actor_form }
    = remove_sub_link icon_tag('remove') + ' ' + t('views.activity.remove_function_activity'), f
