= render :partial => 'administration/sub_menu'

.toolbar
  %ul.actions
    %li
      = button_link_to_remote t('views.news.new_news'), { :url => new_resource_url, :method => :get, :update => 'new-news' }, :icon => 'add'

%h1= t 'views.news.index_title', :action => t('views.base.listing_action')

#new-news

- if @news_items.empty?
  %p= t 'views.news.no_news_exist'
- else
  .number-of-hits= page_entries_info @news_items
  %table.index
    %tr
      %th= order @search, :by => :publication_date, :as => t('activerecord.attributes.news.publication_date')
      %th= order @search, :by => :subject, :as => t('activerecord.attributes.news.subject')
      %th= order @search, :by => :is_published, :as => t('activerecord.attributes.news.is_published')
      %th.action-column= t 'views.base.action'
      - @news_items.each do |news|
        %tr{:id => dom_id(news), :class => cycle('even', 'odd')}
          %td= h news.publication_date
          %td= h news.subject
          %td= translate_boolean news.is_published
          %td.actions
            = link_to_view_action news
            = link_to_edit_action news
            = link_to_delete_action news

= will_paginate (@news_items, :previous_label => "&#171; #{t('views.base.previous')}", :next_label => "#{t('views.base.next')} &#187;")           

= content_for :sidebar do 
  - form_for @search do |f|
    .box
      %h3= t 'views.base.search'
      %p
        %label= t('activerecord.attributes.news.publication_date') + ' (' + t('views.base.from') + ')'
        %br>
        = f.text_field :publication_date_gte, :class => 'datepicker', :size => 10 
      %p
        %label= t('activerecord.attributes.news.publication_date') + ' (' + t('views.base.to') + ')'
        %br>
        = f.text_field :publication_date_lte, :class => 'datepicker', :size => 10
      %p
        %label= t 'activerecord.attributes.news.subject'
        %br>
        = f.text_field :subject_contains, :size => 15
      %p
        %label= t 'activerecord.attributes.news.is_published'
        %br>
        = f.select :is_published_equals, {'' => '', t('views.base.yes') => true, t('views.base.no') => false}
      %p.form-buttons
        = button t('views.base.search')
