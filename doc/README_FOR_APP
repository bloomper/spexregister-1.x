= Chalmersspexets Adressregister

== Introduktion

Denna applikation är ett webbaserat register för Chalmersspexets räkning.

== Miljö

(nedanstående versioner är de som har använts under utveckling, andra kan mycket väl fungera)

- Apache 2.2.4
- OpenSSL 0.9.8
- MySQL 5.1.41
- JDK 6.0
- Ant 1.7.1
- Ruby 1.8.7
- RubyGems 1.3.5
- Rails 2.3.5
- ImageMagick 6.5.3
- Subversion 1.6.6
- Capistrano 2.5.10 (behövs endast om man skall utföra deployment-relaterade uppgifter)

config/environment.rb specifierar vilka andra gems som är nödvändiga.
 
== Installationsinstruktion

Instruktionerna förutsätter en Debian-baserad Linux-distribution men det borde vara tämligen enkelt att översätta
dem till andra *nix-plattformar.

Installationen kan göras för två olika miljöer, produktions- och utvecklingsmiljö.

I ett antal steg så exekverar man kommandon från utvecklingsmiljön för att sätta upp produktionsmiljön. Dessa
kommandon kräver att utvecklingsmiljön är *nix. Det går inte att använda Windows (inte ens med Cygwin).

=== Produktionsmiljö

(1) Ladda ner MySQL från www.mysql.com och installera enligt konstens alla regler.

(2) Ladda ner Ruby från ftp://ftp.ruby-lang.org/pub/ruby och installera enligt konstens alla regler. Glöm inte att lägga till stöd för openssl!

(3) Ladda ner RubyGems från http://rubyforge.org/projects/rubygems/ och installera enligt instruktion.

(4) Ladda ner ImageMagick från http://www.imagemagick.org och installera enligt instruktion.

(5) Ladda ner JDK från http://java.sun.com/javase/downloads och installera enligt instruktion. Se till att man kan exekvera 'java' utan att behöva specifiera fullständig sökväg.

(6) Ladda ner Ant från http://ant.apache.org/ och installera enligt instruktion. Se till att man kan exekvera 'ant' utan att behöva specifiera fullständig sökväg.

(7) Installera Rails genom att exekvera 'sudo gem install rails --version X.X.X' (X.X.X enligt ovan).

(8) Installera OpenSSL via 'sudo apt-get install openssl'.

(9) Ladda ner Apache från http://httpd.apache.org/ och installera enligt instruktion (dvs kompilera). Glöm inte inkludera '--enable-ssl' när du kör 'configure'.

(10) Ladda ner Subversion från http://subversion.tigris.org/ och installera enligt instruktion.

(11) Skapa databasen i MySQL:
     CREATE DATABASE IF NOT EXISTS spexregister CHARACTER SET utf8 COLLATE utf8_swedish_ci;

(12) Skapa databasanvändare i MySQL:
     GRANT DELETE, INSERT, SELECT, UPDATE, USAGE, CREATE, DROP, ALTER, INDEX, LOCK TABLES ON spexregister.* TO spex@localhost IDENTIFIED BY 'spex';
     GRANT DELETE, INSERT, SELECT, UPDATE, USAGE, CREATE, DROP, ALTER, INDEX, LOCK TABLES ON spexregister.* TO spex@127.0.0.1 IDENTIFIED BY 'spex';
     
(13) Om nödvändigt, uppdatera config/deploy.rb. Filen måste inte "committas" till SVN men är troligtvis en bra idé.

(14) Skapa biblioteket där applikationen skall köras ifrån (dvs den som pekas ut i deploy.rb).

(15) Exekvera 'cap deploy:setup' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb.

(16) Exekvera 'cap deploy:check' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb.
     Rätta eventuella rapporterade fel.

(17) Exekvera 'cap deploy:update' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb. Det är viktigt att produktionsmiljön inte använder sig av färgkodning (ANSI) för kommandot 'ls'.

(18) Exekvera 'cap deploy:gems:install' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb. Det är viktigt att produktionsmiljön inte använder sig av färgkodning (ANSI) för kommandot 'ls'.

(19) Exekvera 'cap deploy:migrate' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb.

(20) Importera data från gamla spexregistret. Se nedan för instruktioner.

(27) Skapa '/usr/local/apache2/conf/spexregister' och kopiera dit spexregister.common, spexregister.conf, spexregister.secure.conf och spexregister.proxy_cluster.conf från config.

(28) Om nödvändigt, uppdatera ovanstående filer, tex sökvägar.

(29) Lägg till följande i '/usr/local/apache2/conf/httpd.conf' (kommentera bort den tredje raden och ta bort # på den andra för att köra HTTP istället för HTTPS):

  - Include conf/spexregister/spexregister.proxy_cluster.conf
  - #Include conf/spexregister/spexregister.conf
  - Include conf/spexregister/spexregister.secure.conf

(30) Sätt upp IP-baserad virtual host i '/usr/local/apache2/conf/httpd.conf'.

(31) Starta om Apache via 'sudo /etc/init.d/apache2ctl restart'.

(32) Ta bort användarna "admin" och "user" efter att du har skapat en korrekt administratörsanvändare.

(33) Kör 'ant compile' i biblioteket jasperreports i produktionsmiljön. 

(34) Kör 'ant compile-reports' i biblioteket jasperreports i produktionsmiljön. 

(35) Skapa en cron trigger enligt */30 * * * * username /full/path/to/ruby /full/path/to/script/runner -e production "SessionCleaner.remove_stale_sessions". Ändra username till den korrekta användaren. Ändra /full/path/to så att den pekar till dit applikationen är installerad respektive ruby.

(36) För att rotera logfiler, lägg till följande i '/etc/logrotate.conf' (ändra /full/path/to så att den pekar till dit applikationen är installerad):

  - # Rails logs:
     /full/path/to/log/production.log {
     daily
     missingok
     rotate 14
     compress
     delaycompress
     notifempty
     copytruncate
     create 0644 register register
   }
   # Rails/BackgrounDRb logs:
     /full/path/to/log/backgroundrb.log {
     size 1M
     missingok
     rotate 5 
     compress 
     delaycompress
     notifempty   
     copytruncate
     create 0644 register register
   }
   # Rails/BackgrounDRb logs:
     /full/path/to/log/backgroundrb_server.log {
     size 1M
     missingok
     rotate 5
     compress
     delaycompress
     notifempty
     copytruncate
     create 0644 register register
   }
   
(37) Skapa ett bibliotek 'db_backup' i produktionsmiljön, direkt i användarens home (tex /home/users/register/db_backup).

(38) Ladda ner automysqlbackup.sh från http://sourceforge.net/projects/automysqlbackup/ och lägg i 'db_backup'.

(39) Uppdatera automysqlbackup.sh med relevant data, tex emailadress. Glöm inte att mutt måste vara installerat.

(40) Skapa en cron trigger enligt 0 4 * * * username /full/path/to/automysqlbackup.sh. Ändra username till den korrekta användaren. Ändra /full/path/to så att den pekar till dit automysqlbackup.sh är installerad.

(41) Klart!

=== Utvecklingsmiljö

(1) Ladda ner Ruby från ftp://ftp.ruby-lang.org/pub/ruby och installera enligt konstens alla regler.

(2) Ladda ner RubyGems från http://rubyforge.org/projects/rubygems/ och installera enligt instruktion.

(3) Ladda ner ImageMagick från http://www.imagemagick.org och installera enligt instruktion.

(4) Ladda ner JDK från http://java.sun.com/javase/downloads och installera enligt instruktion. Se till att man kan exekvera 'java' utan att behöva specifiera fullständig sökväg.

(5) Ladda ner Ant från http://ant.apache.org/ och installera enligt instruktion. Se till att man kan exekvera 'ant' utan att behöva specifiera fullständig sökväg.

(6) Installera Rails genom att exekvera 'sudo gem install rails --version X.X.X' (X.X.X enligt ovan).

(7) Installera Capistrano genom att exekvera 'sudo gem install capistrano'.

(8) Installera Mongrel genom att exekvera 'sudo gem install mongrel'.

(9) Exekvera 'rake gems:install' från roten av applikationen (dvs där app, config, db osv finns).

(10) Exekvera 'rake db:migrate' från roten av applikationen (dvs där app, config, db osv finns).

(11) Exekvera 'rake db:seed' från roten av applikationen (dvs där app, config, db osv finns).

(12) Klart!

För utveckling så kan man använda tex RadRails (http://www.radrails.org).

== Migrering av gamla spexregistret

TODO

== Kända fel

Inga.

== Förslag till framtida förbättringar

- Lägg till funktionstester
- Lägg till integrationstester
- Hålla koll på misslyckade inloggningar, dvs efter tre felaktiga lösenord så låses kontot
- Förbättra modellen för nyuppsättningar för att undvika duplicering som är fallet nu
- Mer finkorniga rättigheter
  - Tex, en directeur skall endast kunna administrera sitt eget spex
  - Tex, en FGV-adminstratör kan endast ändra spexarnas FGV-medlemskap
- Lägg till prestandatester (om nödvändigt)
- Lägg till Selenium-tester (om nödvändigt)
- Lägg till caching (om nödvändigt)

== Utvecklare

- Anders "Colgate" Jacobsson
- Fredrik "Faxe" Bonde
- Patrik Lampa

== Copyright/upphovsrätt

Copyright (c) 2009 Chalmersspexet
