= Chalmersspexets Adressregister

== Introduktion

Denna applikation är ett webbaserat register för Chalmersspexets räkning.

== Ändringar/tillägg

- SQLite

== Miljö

- Apache 2.2.4
- OpenSSL 0.9.8
- MySQL >= 4.1
- JDK 5.0
- Ant 1.6.5
- Ruby 1.8.5
- RubyGems 0.9.2
- Rails 1.2.6
- Gettext 1.9.0
- MySQL binding 2.7
- Ferret 0.11.3
- ImageMagick 6.3.1
- Minimagick 1.2.0
- Mongrel 1.0.1
- Mongrel cluster 1.0.1.1
- Slave 1.1.0
- Subversion 1.4.3
- (Capistrano 1.4.1)
- (rcov 0.8.0.2)
- (iReport 1.3.1)

Capistrano behövs endast om man skall utföra deployment-relaterade uppgifter medan rcov används för att göra "code coverage"-tester. iReport används
för att utveckla rapporter för JasperReports.
 
== Installationsinstruktion

Instruktionerna förutsätter en Debian-baserad Linux-distribution och testades på Ubuntu Dapper 6.06. Men det borde vara tämligen enkelt att översätta
instruktionerna till andra Linux-distributioner eller andra Unix-plattformar. Registret kan INTE installeras och köras på Windows pga hur några 3PP
(tredjepartsprodukter) fungerar (närmare bestämt Ferret och Minimagick).

Installationen kan göras för två olika miljöer, produktions- och utvecklingsmiljö.

=== Produktionsmiljö

(1) Ladda ner MySQL från www.mysql.com och installera enligt konstens alla regler. Registret har hittills endast testats med 4.1.15 men det borde inte vara några problem med att använda 5.x.

(2) Ladda ner Ruby 1.8.5 från ftp://ftp.ruby-lang.org/pub/ruby/ruby-1.8.5.tar.gz. Installera enligt http://www.rubywizards.com/viewtopic.php?pid=19. Glöm inte att lägga till stöd för openssl!

(3) Ladda ner RubyGems 0.9.2 från http://rubyforge.org/projects/rubygems/ och installera enligt instruktion.

(4) Ladda ner JDK 5.0 (eller senare) från http://java.sun.com/javase/downloads/index_jdk5.jsp och installera enligt instruktion. Se till att man kan exekvera 'java' utan att behöva specifiera fullständig sökväg.

(5) Installera Rails 1.2.3 genom att exekvera 'sudo gem install rails --include-dependencies --version 1.2.3'.

(6) Installera Gettext 1.9.0 (eller senare) genom att exekvera 'sudo gem install gettext --include-dependencies'. Välj Ruby-versionen.

(7) Installera MySQL binding 2.7 (eller senare) genom att exekvera 'sudo gem install mysql --include-dependencies'. Välj Ruby-versionen.

(8) Installera Ferret 0.11.3 (eller senare) genom att exekvera 'sudo gem install ferret --include-dependencies'.

(9) Installera Minimagick 1.2.0 (eller senare) genom att exekvera 'sudo gem install mini_magick --include-dependencies'.

(10) Installera Mongrel 1.0.1 (eller senare) genom att exekvera 'sudo gem install mongrel --include-dependencies'. Välj Ruby-versionen.

(11) Installera Mongrel cluster 1.0.1.1 (eller senare) genom att exekvera 'sudo gem install mongrel_cluster --source http://mongrel.rubyforge.org/releases/ --include-dependencies'.

(12) Installera Slave 1.2.1 (eller senare) genom att exekvera 'sudo gem install slave --include-dependencies'.

(13) Ladda ner ImageMagick 6.3.1 (eller senare) från http://www.imagemagick.org (ladda ner källkoden) och installera enligt instruktion (dvs kompilera).

(14) Ladda ner Ant 1.6.5 (eller senare) från http://ant.apache.org/ och installera enligt instruktion. Se till att man kan exekvera 'ant' utan att behöva specifiera fullständig sökväg.

(15) Installera OpenSSL 0.9.8 (eller senare) via 'sudo apt-get install openssl'.

(16) Ladda ner Apache 2.2.4 från http://httpd.apache.org/ (ladda ner källkoden) och installera enligt instruktion (se länkar nedan) (dvs kompilera). Glöm inte inkludera '--enable-ssl' när du kör 'configure'.

(17) Ladda ner Subversion 1.4.3 (eller senare) från http://subversion.tigris.org/ och installera enligt instruktion.

(18) Skapa databasen mha create_database.sql som finns i db/production (db/test och db/development för test respektive utveckling).

(19) Skapa databasanvändare mha create_db_user.sql som finns i db/production (db/test och db/development för test respektive utveckling).

(20) Om nödvändigt, uppdatera config/mongrel_cluster.yml. OBS! Filen måste "committas" till SVN (och eventuellt skapa en ny versionstag).

(21) Om nödvändigt, uppdatera config/deploy.rb. Filen måste inte "committas" till SVN men är troligtvis en bra idé.

(22) Skapa biblioteket där applikationen skall köras ifrån (dvs den som pekas ut i mongrel_cluster.yml och deploy.rb).

(23) Exekvera 'cap setup' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb.

(24) Exekvera 'cap cold_deploy' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb. Det är viktigt att produktionsmiljön inte använder sig av färgkodning (ANSI) för kommandot 'ls'.

(25) Exekvera 'cap migrate' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb.

(26) Importera data från gamla spexregistret.

(27) Skapa '/usr/local/apache2/conf/spexregister' och kopiera dit spexregister.common, spexregister.conf, spexregister.secure.conf och spexregister.proxy_cluster.conf från config.

(28) Om nödvändigt, uppdatera ovanstående filer, tex sökvägar.

(29) Lägg till följande i '/usr/local/apache2/conf/httpd.conf' (kommentera bort den tredje raden och ta bort # på den andra för att köra HTTP istället för HTTPS):

  - Include conf/spexregister/spexregister.proxy_cluster.conf
  - #Include conf/spexregister/spexregister.conf
  - Include conf/spexregister/spexregister.secure.conf

(30) Sätt upp IP-baserad virtual host i '/usr/local/apache2/conf/httpd.conf'.

(31) Starta om Apache via 'sudo /etc/init.d/apache2ctl restart'.

(32) Ta bort användarna "admin" och "user" efter att du har skapat en korrekt administratörsanvändare.

(33) Kör 'ant compile' i biblioteket jasperreports i produktionsmiljön. 

(34) Kör 'ant compile-reports' i biblioteket jasperreports i produktionsmiljön. 

(35) Skapa en cron trigger enligt */30 * * * * username /full/path/to/ruby /full/path/to/script/runner -e production "SessionCleaner.remove_stale_sessions". Ändra username till den korrekta användaren. Ändra /full/path/to så att den pekar till dit applikationen är installerad respektive ruby.

(36) För att rotera logfiler, lägg till följande i '/etc/logrotate.conf' (ändra /full/path/to så att den pekar till dit applikationen är installerad):

  - # Rails logs:
     /full/path/to/log/production.log {
     daily
     missingok
     rotate 14
     compress
     delaycompress
     notifempty
     copytruncate
     create 0644 register register
   }
   # Rails/BackgrounDRb logs:
     /full/path/to/log/backgroundrb.log {
     size 1M
     missingok
     rotate 5 
     compress 
     delaycompress
     notifempty   
     copytruncate
     create 0644 register register
   }
   # Rails/BackgrounDRb logs:
     /full/path/to/log/backgroundrb_server.log {
     size 1M
     missingok
     rotate 5
     compress
     delaycompress
     notifempty
     copytruncate
     create 0644 register register
   }
   
(37) Skapa ett bibliotek 'db_backup' i produktionsmiljön, direkt i användarens home (tex /home/users/register/db_backup).

(38) Ladda ner automysqlbackup.sh från http://sourceforge.net/projects/automysqlbackup/ och lägg i 'db_backup'.

(39) Uppdatera automysqlbackup.sh med relevant data, tex emailadress. Glöm inte att mutt måste vara installerat.

(40) Skapa en cron trigger enligt 0 4 * * * username /full/path/to/automysqlbackup.sh. Ändra username till den korrekta användaren. Ändra /full/path/to så att den pekar till dit automysqlbackup.sh är installerad.

(41) Klart!

=== Utvecklingsmiljö

(1) Installera enligt produktionsmiljö (Apache är dock inte nödvändigt).

(2) Installera Capistrano 1.4.1 (eller senare) genom att exekvera 'sudo gem install capistrano --include-dependencies'.

(3) Installera rcov 0.8.0.2 (eller senare) genom att exekvera 'sudo gem install rcov --include-dependencies'. Välj Ruby-versionen.

(4) Ladda ner iReport 1.3.1 (eller senare) från http://www.jasperforge.org/sf/projects/ireport och installera enligt instruktion.

För utveckling så kan man använda tex RadRails (http://www.radrails.org).

== Länkar

- Ikoner (http://www.famfamfam.com/lab/icons)

== Kända fel

Inga.

== Förslag till framtida förbättringar

- Hålla koll på misslyckade inloggningar, dvs efter tre felaktiga lösenord så låses kontot
- Förbättra hantering mellan en function_item och en actor_item, kanske som en mer naturlig del av relationen mellan en link_item och en function_item (has_many :through?)
- Minska på den duplicerade koden mellan administration av spexare item och browse
- Använd CAPTCHA när man begär nytt konto för att undvika spam (http://www.robsanheim.com/brain-buster, http://expressica.com/2007/02/06/simple-captcha-released-the-captcha-for-rails-applications/)
- "Graceful Javascript degradation" om det är möjligt
- Städa i CSS-filerna
- Konvertera till divs istället för tables (dvs använda legends/fieldsets)
- I samband med konverteringen till divs, använd en custom form builder
  - http://developers.inxsasia.com/hemant/articles/2006/12/04/random-ruby-and-rails-tricks
  - http://www.agilewebdevelopment.com/plugins/cssformbuilder
  - http://woss.name/2006/07/13/tabular-formbuilder-for-easily-creating-forms-in-rails/
  - http://www.agilewebdevelopment.com/plugins/form_label_helper
- Konvertera till ActiveResource (möjligtvis ett stort arbete men som skulle kunna minska på koden och dessutom förenkla den)
- Lägg till prestandatester (om nödvändigt)
- Lägg till Selenium-tester (om nödvändigt)
- Lägg till RDoc-dokumentation där det behövs
- Lägg till caching (om nödvändigt)

== Utvecklare

- Anders "Colgate" Jacobsson
- Fredrik "Faxe" Bonde
- Patrik Lampa

== Copyright/upphovsrätt

Copyright (c) 2007 Chalmersspexet
