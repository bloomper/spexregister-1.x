= Chalmersspexets Adressregister

== Introduktion

Denna applikation är ett webbaserat register för Chalmersspexets räkning.

== Miljö

(nedanstående versioner är de som har använts under utveckling, andra kan mycket väl fungera)

- Apache 2.2.4
- OpenSSL 0.9.8
- MySQL 5.1.41
- JDK 6.0
- Ant 1.7.1
- Ruby 1.8.7
- RubyGems 1.3.5
- Rails 2.3.12
- ImageMagick 6.5.3
- Subversion 1.6.6
- Capistrano 2.5.19 (behövs endast om man skall utföra deployment-relaterade uppgifter)

config/environment.rb specifierar vilka andra gems som är nödvändiga.
 
== Installationsinstruktion

Instruktionerna förutsätter en Debian-baserad Linux-distribution men det borde vara tämligen enkelt att översätta
dem till andra *nix-plattformar.

Installationen kan göras för två olika miljöer, produktions- och utvecklingsmiljö.

Vid installation av produktionsmiljö så exekverar man kommandon från utvecklingsmiljön i ett antal steg för att sätta
upp produktionsmiljön. Dessa kommandon kräver att utvecklingsmiljön är *nix-baserad. Det går inte att använda Windows
(inte ens med Cygwin).

=== Produktionsmiljö

(1) Ladda ner MySQL från www.mysql.com och installera enligt konstens alla regler.

(2) Ladda ner Ruby från ftp://ftp.ruby-lang.org/pub/ruby och installera enligt konstens alla regler. Glöm inte att lägga till stöd för openssl, iconv och sqlite!

(3) Ladda ner RubyGems från http://rubyforge.org/projects/rubygems/ och installera enligt instruktion.

(4) Ladda ner ImageMagick från http://www.imagemagick.org och installera enligt instruktion. Se till att man kan exekvera 'convert' utan att behöva specifiera fullständig sökväg.

(5) Ladda ner JDK från http://java.sun.com/javase/downloads och installera enligt instruktion. Se till att man kan exekvera 'java' utan att behöva specifiera fullständig sökväg.

(6) Ladda ner Ant från http://ant.apache.org/ och installera enligt instruktion. Se till att man kan exekvera 'ant' utan att behöva specifiera fullständig sökväg.

(7) Installera Rails genom att exekvera 'sudo gem install rails --version X.X.X' (X.X.X enligt ovan).

(8) Installera OpenSSL via 'sudo apt-get install openssl'.

(9) Ladda ner Apache från http://httpd.apache.org/ och installera enligt instruktion (dvs kompilera). Glöm inte inkludera '--enable-ssl' när du kör 'configure'.

(10) Ladda ner Subversion från http://subversion.tigris.org/ och installera enligt instruktion.

(11) Skapa databasen i MySQL:
     CREATE DATABASE IF NOT EXISTS spexregister CHARACTER SET utf8 COLLATE utf8_swedish_ci;

(12) Skapa databasanvändare i MySQL:
     GRANT ALL PRIVILEGES ON spexregister.* TO spexregister@localhost IDENTIFIED BY 'spexregister';
     GRANT ALL PRIVILEGES ON spexregister.* TO spexregister@127.0.0.1 IDENTIFIED BY 'spexregister';
     
(13) Om nödvändigt, uppdatera config/deploy.rb. Filen bör inte "committas" till SVN. OBS! scm_user kan sättas på command line, tex 'scm_user=your_name cap deploy:setup'

(14) Skapa biblioteket där applikationen skall köras ifrån (dvs den som pekas ut i deploy.rb).

(15) Exekvera 'cap deploy:setup' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb. Behöver bara göras allra första gången.

(16) Exekvera 'cap deploy:check' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb. Rätta eventuella rapporterade fel.

(17) Om det är allra första gången som spexregistret installeras i produktionsmiljö så måste följande två rader i config/deploy.rb kommenteras bort och "committas". Detta beror på att de kräver tillgång till ett antal gems som ännu inte är installerade (görs i steg 19).
     after  'deploy:symlink', 'deploy:asset:packager:build_all'
     before 'deploy:asset:packager:build_all', 'deploy:sass:update'

(18) Exekvera 'cap deploy:update' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb. Det är viktigt att produktionsmiljön inte använder sig av färgkodning (ANSI) för kommandot 'ls'.

(19) Exekvera 'cap deploy:gems:install' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb. Det är viktigt att produktionsmiljön inte använder sig av färgkodning (ANSI) för kommandot 'ls'. Behöver bara göras allra första gången eller om gems har lagts till.

(20) Exekvera 'cap deploy:migrate' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb.

(21) Exekvera 'cap deploy:db:seed' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb.

(22) Om du behövde utföra steg 17, exekvera följande rader. Ta sedan bort den tillfälliga ändringen och "committa".
     'cap deploy:sass:update'
     'cap deploy:asset:packager:build_all'

(21) Importera data från gamla spexregistret. Se nedan för instruktioner.

(22) Lägg till följande i Apache-konfigurationen (byt eventuellt ut sökvägar etc, måste också anpassas om den skall köras parallellt med andra virtual hosts)
     <VirtualHost *:443 *:80>
         <Directory /home/users/register/current/public>
            Options FollowSymLinks
            AllowOverride None
            Order allow,deny
            Allow from All
         </Directory>

         DocumentRoot /home/users/register/current/public
         ServerName register.fgv.nu

         PassengerPoolIdleTime 0

         ErrorLog /var/log/register/httpd-error.log
         CustomLog /var/log/register/httpd-access.log combined

         SSLEngine on
         SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
         SSLCertificateFile /usr/local/etc/certs/register.fgv.nu.crt
         SSLCertificateKeyFile /usr/local/etc/certs/register.fgv.nu.key
         SSLCertificateChainFile /usr/local/etc/certs/register.fgv.nu.crt
         BrowserMatch ".*MSIE.*" nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0
         CustomLog /var/log/register/ssl-access.log "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

         # Gzip/Deflate
         # http://fluxura.com/2006/5/19/apache-for-static-and-mongrel-for-rails-with-mod_deflate-and-capistrano-support
         AddOutputFilterByType DEFLATE text/html text/plain text/xml text/javascript text/css application/x-javascript
         BrowserMatch ^Mozilla/4 gzip-only-text/html
         BrowserMatch ^Mozilla/4\.0[678] no-gzip
         BrowserMatch \bMSIE !no-gzip !gzip-only-text/html

         # Far future expires date
         <FilesMatch "\.(ico|pdf|flv|jpg|jpeg|png|gif|js|css|swf)$">
             Header set Expires "Thu, 15 Apr 2011 20:00:00 GMT"
         </FilesMatch>

         # No Etags
         FileETag None

         RewriteEngine On

         # Check for maintenance file and redirect all requests
         RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
         RewriteCond %{SCRIPT_FILENAME} !maintenance.html
         RewriteRule ^.*$ /system/maintenance.html [L]

         # Static cache
         RewriteCond %{REQUEST_METHOD} !^POST$
         RewriteCond /home/users/register/current/tmp/cache/static$1/index.html -f
         RewriteRule ^(.*)$ /home/users/register/current/tmp/cache/static$1/index.html [L]

         RewriteCond %{HTTPS} off
         RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}
     </VirtualHost>

(23) Starta om Apache via 'sudo /etc/init.d/apache2ctl restart'.

(24) Ta bort användarna "admin" och "user" efter att du har skapat en korrekt administratörsanvändare.

(25) Skapa en cron trigger så att följande exekveras dagligen:
     rake RAILS_ENV=production spexregister:clean_sessions

(26) Skapa en cron trigger så att följande exekveras dagligen:
     rake RAILS_ENV=production spexregister:refresh_cached_content

(27) Skapa en cron trigger så att följande exekveras var 10:e minut (ändra /full/path/to så att den pekar till ruby är installerad respektive registret):
     /full/path/to/ruby /full/path/to/script/runner 'MailQueue.process' -e production

(28) Konfigurera så att en syslog för "register" hamnar i /var/log/register/production.log.

(29) Rotera följande loggfiler: /var/log/register/httpd-error.log, /var/log/register/httpd-access.log, /var/log/register/ssl-access.log och /var/log/register/production.log.

(30) Skapa ett bibliotek 'db_backup' i produktionsmiljön, direkt i användarens home (tex /home/users/register/db_backup).

(31) Ladda ner automysqlbackup.sh från http://sourceforge.net/projects/automysqlbackup/ och lägg i 'db_backup'.

(32) Uppdatera automysqlbackup.sh med relevant data, tex emailadress. Glöm inte att mutt måste vara installerat.

(33) Skapa en cron trigger så att följande exekveras dagligen, tex kl 04:00 (ändra /full/path/to så att den pekar till dit automysqlbackup.sh är installerad):
     /full/path/to/automysqlbackup.sh

(34) Klart!

=== Utvecklingsmiljö

(1) Ladda ner Ruby från ftp://ftp.ruby-lang.org/pub/ruby och installera enligt konstens alla regler.

(2) Ladda ner RubyGems från http://rubyforge.org/projects/rubygems/ och installera enligt instruktion.

(3) Ladda ner ImageMagick från http://www.imagemagick.org och installera enligt instruktion.

(4) Ladda ner JDK från http://java.sun.com/javase/downloads och installera enligt instruktion. Se till att man kan exekvera 'java' utan att behöva specifiera fullständig sökväg.

(5) Ladda ner Ant från http://ant.apache.org/ och installera enligt instruktion. Se till att man kan exekvera 'ant' utan att behöva specifiera fullständig sökväg.

(6) Installera Rails genom att exekvera 'sudo gem install rails --version X.X.X' (X.X.X enligt ovan).

(7) Installera Capistrano genom att exekvera 'sudo gem install capistrano'.
    Endast nödvändigt om deployment-relaterade uppgifter skall göras (kräver *nix-baserad utvecklingsmiljö).

(8) Installera Mongrel genom att exekvera 'sudo gem install mongrel'.

(9) Exekvera 'rake gems:install' från roten av applikationen (dvs där app, config, db osv finns).
    Det kan vara nödvändigt att installera vissa gems manuellt ("hönan och ägget"-syndromet).

(10) Exekvera 'rake db:migrate' från roten av applikationen (dvs där app, config, db osv finns).

(11) Exekvera 'rake db:seed' från roten av applikationen (dvs där app, config, db osv finns).

(12) Klart!

För utveckling så kan man använda tex RadRails (http://www.radrails.org).

== Migrering av gamla spexregistret (OBS! Fungerar endast med 1.0)

(1) För över senaste datafilen i data/target till produktionsmiljön.

(2) För över allt under step4 till produktionsmiljön.

(3) Exekvera 'ruby import.rb prod <datafilens namn>' i produktionsmiljön.

(4) Utför de ändringar som beskrivs i step5.

== Uppgradering 1.0 -> 1.1

(1) Uppgradera Rails genom att exekvera 'gem install rails --version 2.3.12'.

(2) Avinstallera tidigare version av Rails genom att exekvera 'gem uninstall rails' och välj sedan rätt alternativ.

(3) Exekvera 'cap deploy:update' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb. Det är viktigt att produktionsmiljön inte använder sig av färgkodning (ANSI) för kommandot 'ls'.

(4) Exekvera 'cap deploy:gems:install' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb.

(5) Logga in i produktionsmiljö och avinstallera oanvända versioner av gems genom att exekvera 'gem uninstall <gem>'.

(6) Exekvera 'cap deploy:migrate' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb.

(7) Installera rapportdelen (spexregister.reports) av registret i en Tomcat.

== Uppgradering 1.1 -> 1.2

(1) Exekvera 'cap deploy:update' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb. Det är viktigt att produktionsmiljön inte använder sig av färgkodning (ANSI) för kommandot 'ls'.

(2) Exekvera 'cap deploy:gems:install' från roten av applikationen (dvs där app, config, db osv finns) i utvecklingsmiljön. Ange lösenordet för den användare som definierats i deploy.rb.

(3) Logga in i produktionsmiljö och avinstallera oanvända versioner av gems genom att exekvera 'gem uninstall <gem>'.

(4) Installera sökdelen (spexregister.search) av registret i en Tomcat.

(5) Sätt URIEncoding till UTF-8 i server.xml i Tomcat.

(6) Exekvera 'rake spexregister:reindex' i produktionsmiljön. Sökdelen måste vara igång när detta görs.

== Kända fel

Inga.

== Förslag till framtida förbättringar

- Hålla koll på misslyckade inloggningar, dvs efter tre felaktiga lösenord så låses kontot
- Mer finkorniga rättigheter
  - Tex, en directeur skall endast kunna administrera sitt eget spex
  - Tex, en FGV-administratör kan endast ändra spexarnas FGV-medlemskap
- Lägg till funktionstester
- Lägg till integrationstester
- Lägg till prestandatester (om nödvändigt)
- Lägg till Selenium-tester (om nödvändigt)
- Lägg till caching (om nödvändigt)

== Utvecklare

- Anders "Colgate" Jacobsson
- Fredrik "Faxe" Bonde
- Philip "BH" Larsson
- Patrik "PAta" Lampa
- Stefan Karlsson

== Copyright/upphovsrätt

Copyright (c) 2010-2011 Chalmersspexet
